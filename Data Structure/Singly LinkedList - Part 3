
package datastructures;


public class SinglyLinkedlist {
    
    //private ListNode head;   // Head node to hold the list
    
    //Given a ListNode, print all elements in list
    
    public void display(ListNode head) {
        if(head == null){
            return;
        }
        ListNode current = head;
        //loop each element till end of the list
        //last node points to null
        while(current != null){
            System.out.print(current.data + " --> "); //print current element's data
            //move to next element
            current = current.next;
        }
        System.out.print(current); //here current will be null
    }
    //It contains a static inner class ListNode
    
    private static class ListNode {
        private int data;
        private ListNode next;
        
        // Create Constructor which will initialize new node data passed in argument
    
        public ListNode(int data){
            this.data = data;
            this.next = null;
        }
    }
    
       public static void main(String[] args) {
        // Lets create a linked list 
        //  |10|  | --> |8| | --> |1| | --> |11| |--> null
        // 10 as head node of linked list
        
        ListNode head = new ListNode(10);
        ListNode second = new ListNode(8);
        ListNode third = new ListNode(1);
        ListNode fourth = new ListNode(11);
        
        //Attach them together to form a list
        
        head.next = second; // 10 --.> 8
        second.next = third; // 10 --> 8 --> 1
        third.next = fourth; // 10 --> 8 --> 1 --> 11 --> null
        
        SinglyLinkedlist sll = new SinglyLinkedlist();
        sll.display(head);
    }
    
}

Output  // 10 --> 8 --> 1 --> 11 --> null


